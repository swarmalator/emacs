#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:nil todo:t |:t
#+TITLE: setup
#+DATE: <2017-01-24 Tue>
#+AUTHOR: Cole Turner
#+EMAIL: c.h.turner@tcu.edu
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.1.1 (Org mode 9.0.5)

* Required Packages
#+BEGIN_SRC emacs-lisp
(require 'company)
(require 'org-bullets)
(require 'tex-mode)
(require 'dired)
(require 'helm)
(require 'smartparens)
(require 'haskell-mode)
(require 'org-ref)
#+END_SRC
* Functions/Commands

#+BEGIN_SRC emacs-lisp
(defun my-alpha (b) (interactive "P")
       (set-frame-parameter (selected-frame) 'alpha (if b (+ (* b 5) 50) 100)))
(defun my-clean-lines () (interactive)
       (replace-string "" "" nil 0 (buffer-size) nil))
(defun my-explorer () (interactive)
       (shell-command (concat "explorer " (replace-regexp-in-string "/" "\\" default-directory t t))))
(defun my-M-x () (interactive)
       (setq unread-command-events (listify-key-sequence "my-"))
       (call-interactively 'helm-M-x))
#+END_SRC
* Macros
#+BEGIN_SRC emacs-lisp

#+END_SRC
* Hooks
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook 'org-bullets-mode)
(add-hook 'dired-mode-hook 'openwith-mode)
#+END_SRC
* Smartparens Pairs
#+BEGIN_SRC emacs-lisp
(sp-pair "(" ")" :wrap "C-(")
(sp-local-pair '(emacs-lisp-mode lisp-interaction-mode) "'" nil :actions nil)
(sp-local-pair '(org-mode tex-mode) "$" "$")
(sp-local-pair '(org-mode tex-mode) "\\textit{" "}" :insert "C-S-i")
(sp-local-pair '(org-mode tex-mode) "\\textbf{" "}" :insert "C-S-b")
(sp-local-pair '(org-mode tex-mode) "\\left(" "\\right)" :insert "C-c l")
(sp-local-pair '(org-mode tex-mode) "\\left[" "\\right]" :insert "C-c L")
(sp-local-pair '(java-mode) "System.out.println(" ")" :trigger "syso")
#+END_SRC
* Key Bindings
Reserved for user:
- "C-c /letter/"
- <F5> through <F9> (without modifier keys)
- "C-" or "M-" folllowed by /digit/ (overwrites digit-argument, use C-u instead)
- <apps> key (Windows-specific)
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key (kbd "M-X") 'my-M-x)
(global-set-key (kbd "C-c b") 'bookmark-jump)
(global-set-key (kbd "C-c e") 'my-explorer)
(global-set-key (kbd "C-c c") 'org-capture)
(global-set-key (kbd "C-c a") 'org-agenda)
(global-set-key (kbd "C-c m") 'minimap-mode)
(global-set-key (kbd "C-c s") 'flyspell-mode)
(define-key haskell-mode-map (kbd "C-c h") 'hoogle)
(define-key smartparens-mode-map (kbd "M-f") 'sp-forward-symbol)
(define-key smartparens-mode-map (kbd "M-b") 'sp-backward-symbol)
(define-key smartparens-mode-map (kbd "M-p") 'sp-next-sexp)
(define-key smartparens-mode-map (kbd "M-n") 'sp-previous-sexp)
(define-key smartparens-mode-map (kbd "C-S-<left>") 'sp-forward-barf-sexp)
(define-key smartparens-mode-map (kbd "C-S-<right>") 'sp-forward-slurp-sexp)
#+END_SRC

* Extra

#+BEGIN_SRC emacs-lisp

(helm-mode t)
(show-smartparens-global-mode)
(set-frame-parameter (selected-frame) 'alpha 100)

(setq backup-directory-alist '(("." . "~/.emacs.d/backup")))

(setq org-latex-pdf-process
      '("pdflatex -interaction nonstopmode -output-directory %o %f"
	"bibtex %b"
	"pdflatex -interaction nonstopmode -output-directory %o %f"
	"pdflatex -interaction nonstopmode -output-directory %o %f"))

(cond
 ((string-equal system-type "windows-nt")
  (progn
    (add-to-list 'exec-path "C:/Program Files (x86)/Aspell/bin/")
    (setq ispell-program-name "aspell")
    (setq ispell-personal-dictionary "C:/Program Filesx(x86)/Aspell/dict")
    )))
#+END_SRC


